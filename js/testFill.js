/**
 * Script para preencher e testar o formul√°rio de inscri√ß√£o automaticamente.
 * Foi ajustado para corresponder √† estrutura mais recente dos formul√°rios e aos
 * arquivos mock gerados pelo script `create_mocks.py`.
 * Cole este c√≥digo no console do navegador na p√°gina do formul√°rio e execute.
 */
async function fillAndTestForm() {
    console.log("üöÄ Iniciando preenchimento autom√°tico do formul√°rio...");

    // === Fun√ß√µes Auxiliares ===

    // Preenche um campo de texto, select ou textarea
    function fillText(id, value) {
        const el = document.getElementById(id);
        if (el) {
            el.value = value;
            el.dispatchEvent(new Event('change', { bubbles: true }));
        } else {
            console.warn(`Elemento n√£o encontrado: #${id}`);
        }
    }

    // Marca um radio ou checkbox
    function checkRadioOrCheckbox(selector) {
        const el = document.querySelector(selector);
        if (el) {
            el.checked = true;
            el.dispatchEvent(new Event('change', { bubbles: true }));
        } else {
            console.warn(`Elemento n√£o encontrado: ${selector}`);
        }
    }

    // "Anexa" um arquivo falso a um campo de upload.
    // O nome do arquivo √© gerado a partir do ID se n√£o for especificado.
    function setFileInput(id, fileName) {
        const fileInput = document.getElementById(id);
        if (fileInput) {
            // Se o nome do arquivo n√£o for fornecido, cria um a partir do ID do campo.
            const finalFileName = fileName || `${id}.pdf`;
            
            const dataTransfer = new DataTransfer();
            const file = new File(['mock content'], finalFileName, { type: 'application/pdf' });
            dataTransfer.items.add(file);
            fileInput.files = dataTransfer.files;
            fileInput.dispatchEvent(new Event('change', { bubbles: true }));
        } else {
            console.warn(`Elemento de arquivo n√£o encontrado: #${id}`);
        }
    }

    // === Preenchimento dos Campos (Atualizado com os nomes dos arquivos mock) ===

    // -- Se√ß√£o 1: Identifica√ß√£o do Candidato --
    console.log("Preenchendo Se√ß√£o 1: Identifica√ß√£o");
    fillText('nomeCompleto', 'Candidato Teste da Silva');
    fillText('email', 'teste@example.com');
    fillText('cpf', '12345678900');
    fillText('documentoIdentificacao', '1234567 SSP/CE');
    fillText('cidade', 'Fortaleza/CE');
    fillText('telefoneCelular', '(85) 99999-8888');
    checkRadioOrCheckbox('#cotaNaoSeAplica');
    setFileInput('docIdentidadeUpload'); // Gera 'docIdentidadeUpload.pdf'
    setFileInput('autodeclaracaoUpload', 'autodeclaracao_mock.pdf');
    setFileInput('dcfUpload', 'dcf_mock.pdf');


    // -- Se√ß√£o 2: Forma√ß√£o Acad√™mica --
    console.log("Preenchendo Se√ß√£o 2: Forma√ß√£o Acad√™mica");
    fillText('curriculoLattes', 'http://lattes.cnpq.br/1234567890123456');
    fillText('cursoGraduacao', 'Engenharia de Software');
    fillText('instituicao', 'Universidade Federal do Cear√°');
    fillText('igcInstituicao', '4');
    fillText('ira', '8.75');
    setFileInput('diplomaGraduacaoUpload', 'diploma_graduacao_mock.pdf');
    setFileInput('historicoDisciplinasGraduacao', 'historico_graduacao_mock.pdf');


    // -- Se√ß√£o 3: Proposta de Projeto (N√£o h√° campos obrigat√≥rios aqui)

    // -- Se√ß√£o 4: Avalia√ß√£o Curricular --
    console.log("Preenchendo Se√ß√£o 4: Avalia√ß√£o Curricular");
    setFileInput('projPesqComBolsaUpload');
    setFileInput('projPesqSemBolsaUpload');
    setFileInput('revistasA1A2Upload');
    setFileInput('revistasA3A4Upload');
    setFileInput('revistasB1B2Upload');
    setFileInput('revistasB3B4Upload');
    setFileInput('revistasCUpload');
    setFileInput('anaisArtigoCompletoUpload');
    setFileInput('anaisResumoEstendidoUpload');
    setFileInput('anaisResumoUpload');
    setFileInput('docenciaIESUpload');
    setFileInput('iniciacaoDocenciaUpload');
    setFileInput('docenciaBasicoUpload');
    setFileInput('bolsaPETUpload');
    setFileInput('outraBolsaIESUpload');
    setFileInput('tabelaPontuacaoUpload');

    // -- Se√ß√£o 5: Question√°rio Socioecon√¥mico --
    console.log("Preenchendo Se√ß√£o 5: Question√°rio Socioecon√¥mico");
    checkRadioOrCheckbox('#pardoMulato');
    fillText('localizacaoMoradia', 'Rua dos Testes, 123, Bairro Exemplo, Fortaleza/CE');
    fillText('localCondicaoMoradia', 'Resido em um apartamento com boas condi√ß√µes, 3 quartos, bem iluminado e ventilado.');
    fillText('numeroMoradores', '4');
    checkRadioOrCheckbox('#escolaFundamentalPublica');
    checkRadioOrCheckbox('#escolaMedioPublica');
    fillText('escolaridadeFamiliares', 'Pai: Ensino M√©dio completo. M√£e: Ensino Superior incompleto.');
    fillText('rendaFamiliar', '3500');
    fillText('quantidadeLivros', '12');
    fillText('motivacaoEstudos', 'Aprofundar conhecimentos e contribuir para a pesquisa cient√≠fica.');

    // -- Se√ß√£o 6: Autodeclara√ß√£o --
    console.log("Preenchendo Se√ß√£o 6: Autodeclara√ß√£o");
    checkRadioOrCheckbox('#naoExercoAtividadeRemunerada');
    checkRadioOrCheckbox('#estouCienteDasPenalidades');
    checkRadioOrCheckbox('#autorizoAveriguacoes');

    // -- Se√ß√£o 7: Confirma√ß√£o de Profici√™ncia em Ingl√™s -- (N√£o h√° campos obrigat√≥rios aqui)

    console.log("‚úÖ Preenchimento conclu√≠do!");
    console.log("üñ±Ô∏è Acionando o bot√£o 'Gerar PDF'...");

    // === Acionar Valida√ß√£o e Gera√ß√£o do PDF ===
    document.getElementById('generatePdfBtn').click();
}

// Executa a fun√ß√£o
fillAndTestForm();